<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title><%= title %> - 유니크 특허사무소</title>

    <!-- SEO Meta Tags -->
    <meta name="description" content="유니크 특허사무소 특허 현황 조회 시스템">
    <meta name="keywords" content="특허, 특허사무소, 특허 현황, 등록특허, 출원특허, 유니크">
    <meta name="author" content="유니크 특허사무소">

    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content="<%= title %> - 유니크 특허사무소">
    <meta property="og:description" content="유니크 특허사무소 특허 현황 조회 시스템">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://unicpat.com">

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- CSS -->
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/annual-fee-status.css">

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/images/favicon.svg">
    <link rel="alternate icon" href="/images/favicon.svg">
</head>
<body>
    <header class="header">
        <div class="container">
            <div class="header-content">
                <a href="/" class="logo">
                    유니크<span>특허</span>
                </a>
                <nav class="nav-tabs">
                    <a href="/registered" class="nav-link">등록특허 현황</a>
                    <a href="/application" class="nav-link">출원특허 현황</a>
                </nav>
            </div>
        </div>
    </header>

<main class="main-content">
    <div class="container">
        <div class="page-title">
            <h1>등록특허 현황</h1>
            <p>고객번호로 등록된 특허 목록을 조회합니다</p>
        </div>

        <!-- 검색 섹션 -->
        <section class="search-section">
            <form class="search-form" id="searchForm">
                <div class="form-group">
                    <!-- 검색 유형 선택 -->
                    <div class="search-type-group" style="margin-bottom: 1rem;">
                        <label class="form-label">검색 유형</label>
                        <div class="radio-group" style="display: flex; gap: 1rem; margin-top: 0.5rem;">
                            <label class="radio-option" style="display: flex; align-items: center; cursor: pointer;">
                                <input type="radio" name="searchType" value="1" id="businessNumberType" style="margin-right: 0.5rem;">
                                <span>사업자번호 (10자리)</span>
                            </label>
                            <label class="radio-option" style="display: flex; align-items: center; cursor: pointer;">
                                <input type="radio" name="searchType" value="2" id="customerNumberType" checked style="margin-right: 0.5rem;">
                                <span>고객번호 (12자리)</span>
                            </label>
                        </div>
                    </div>

                    <!-- 검색 입력 -->
                    <label for="searchInput" class="form-label" id="searchInputLabel">고객번호</label>
                    <div class="input-group">
                        <input
                            type="text"
                            id="searchInput"
                            name="searchInput"
                            class="form-input customer-number-input"
                            placeholder="예: 120190612244"
                            maxlength="12"
                            pattern="[0-9]{12}"
                            required
                        >
                        <button type="submit" class="btn btn-primary" id="searchBtn">
                            🔍 검색하기
                        </button>
                    </div>
                    <div class="form-hint" id="searchInputHint">12자리 숫자 입력하세요</div>
                </div>
                <button type="button" class="btn btn-secondary find-customer-btn" id="findCustomerBtn">
                    고객번호 찾기
                </button>
            </form>
        </section>

        <!-- 결과 섹션 -->
        <section class="results-section" id="resultsSection" style="display: none;">
            <div class="results-header">
                <div class="results-info">
                    <div class="info-item">
                        <span class="info-label">조회일자:</span>
                        <span class="info-value" id="resultCurrentDate">-</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">권리자:</span>
                        <span class="info-value" id="resultRightHolderName">-</span>
                    </div>
                                    
                    <div class="info-item">
                        <span class="info-label">건수:</span>
                        <span class="info-value" id="resultTotalCount">0</span>건
                    </div>
                </div>
                <div class="action-buttons">
                    <button type="button" class="btn btn-info" id="calculateAnnuityBtn">
                        🧮 연차료 계산
                    </button>
                    <button type="button" class="btn btn-primary" id="renewalRequestBtn">
                        💰 납부의뢰
                    </button>
                    <button type="button" class="btn btn-secondary" id="exportBtn">
                        📊 다운로드
                    </button>
                </div>
            </div>

            <div class="table-container">
                <table class="patent-table" id="patentTable">
                    <thead>
                        <tr>
                            <th>출원번호</th>
                            <th>등록번호</th>
                            <th>출원인</th>
                            <th>출원일</th>
                            <th>등록일</th>
                            <th>존속기간 만료일</th>
                            <th>발명의명칭</th>
                            <th>청구항수</th>
                            <th>등록상태</th>
                            <th>직전년도 납부연월</th>
                            <th>해당 연차료 납부마감일</th>
                            <th>해당연차수</th>
                            <th>해당연차료</th>
                            <th>미납여부</th>
                            <th>추납기간 마감</th>
                            <th>회복기간 마감</th>
                        </tr>
                    </thead>
                    <tbody id="patentTableBody">
                        <!-- 검색 결과가 여기에 표시됩니다 -->
                    </tbody>
                </table>
            </div>

            <!-- 빈 상태 -->
            <div class="empty-state" id="emptyState" style="display: none;">
                <div class="empty-icon">📄</div>
                <div class="empty-title">등록특허가 없습니다</div>
                <div class="empty-description">해당 고객번호로 등록된 특허를 찾을 수 없습니다.</div>
            </div>
        </section>
    </div>
</main>

    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-text">
                    <strong>유니크 특허사무소</strong> - 특허 현황 조회 시스템
                </div>
                <div class="footer-contact">
                    <a href="tel:010-3131-7960">📞 010-3131-7960</a>
                    <a href="mailto:ljunhyek@naver.com">✉️ ljunhyek@naver.com</a>
                    <a href="https://unicpat.com" target="_blank">🌐 unicpat.com</a>
                </div>
                <div class="footer-text" style="margin-top: 1rem; font-size: 0.875rem; color: #94a3b8;">
                    © 2024 유니크 특허사무소. All rights reserved.
                </div>
            </div>
        </div>
    </footer>

    <!-- JavaScript -->
    <script src="/js/main.js"></script>
</body>
</html>

<script>
// 캐시 무효화를 위한 버전 체크
console.log('🔄 등록특허 스크립트 로드됨 - 버전: 2025.09.24.v1');
</script>

<!-- 등록특허 검색 기능 및 연차료 계산 기능 -->
<script src="/js/registered.js?v=2025.09.19.v12"></script>

<!-- 인라인 검색 기능 (백업용) -->
<script>
// 검색 기능 백업 (registered.js가 로드되지 않을 경우를 대비)
if (typeof handleSearch === 'undefined') {
    console.log('🔧 등록특허 검색 백업 스크립트 활성화');

    let currentPatents = [];
    let currentPage = 1;
    const itemsPerPage = 10;

    // 전역 변수로 설정
    window.currentPatents = currentPatents;
    window.currentPage = currentPage;
    window.itemsPerPage = itemsPerPage;

    // 검색 폼 이벤트 리스너
    document.addEventListener('DOMContentLoaded', function() {
        const searchForm = document.getElementById('searchForm');
        if (searchForm) {
            searchForm.addEventListener('submit', async function(e) {
                e.preventDefault();

                const searchType = document.querySelector('input[name="searchType"]:checked').value;
                const searchValue = document.getElementById('searchInput').value.trim();
                const searchBtn = document.getElementById('searchBtn');
                const originalText = searchBtn.innerHTML;

                // 입력 검증
                if (searchType === '1') {
                    if (!/^\d{10}$/.test(searchValue)) {
                        alert('사업자번호는 10자리 숫자여야 합니다.');
                        return;
                    }
                } else {
                    if (!/^\d{12}$/.test(searchValue)) {
                        alert('고객번호는 12자리 숫자여야 합니다.');
                        return;
                    }
                }

                searchBtn.disabled = true;
                searchBtn.innerHTML = '🔍 검색중...';

                try {
                    const response = await fetch('/api/search-registered', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            searchType: searchType,
                            searchValue: searchValue
                        })
                    });

                    const data = await response.json();

                    if (!data.success) {
                        throw new Error(data.error || '검색 중 오류가 발생했습니다.');
                    }

                    displayResults(data);

                } catch (error) {
                    console.error('검색 오류:', error);
                    alert(error.message);
                    hideResults();
                } finally {
                    searchBtn.disabled = false;
                    searchBtn.innerHTML = originalText;
                }
            });
        }

        // 라디오 버튼 변경 이벤트
        const radioButtons = document.querySelectorAll('input[name="searchType"]');
        radioButtons.forEach(radio => {
            radio.addEventListener('change', updateInputField);
        });
    });

    // 입력 필드 업데이트
    function updateInputField() {
        const selectedType = document.querySelector('input[name="searchType"]:checked').value;
        const searchInput = document.getElementById('searchInput');
        const searchInputLabel = document.getElementById('searchInputLabel');
        const searchInputHint = document.getElementById('searchInputHint');

        if (selectedType === '1') {
            searchInputLabel.textContent = '사업자번호';
            searchInput.placeholder = '예: 1234567890';
            searchInput.maxLength = 10;
            searchInput.pattern = '[0-9]{10}';
            searchInputHint.textContent = '10자리 숫자 입력하세요';
        } else {
            searchInputLabel.textContent = '고객번호';
            searchInput.placeholder = '예: 120190612244';
            searchInput.maxLength = 12;
            searchInput.pattern = '[0-9]{12}';
            searchInputHint.textContent = '12자리 숫자 입력하세요';
        }
        searchInput.value = '';
    }

    // 결과 표시 함수
    function displayResults(data) {
        const allPatents = data.patents || [];

        // 등록번호가 3 또는 4로 시작하는 항목 제외
        const filteredPatents = allPatents.filter(patent => {
            const registrationNumber = patent.registrationNumber || '';
            const cleanedRgstNo = registrationNumber.replace(/-/g, '');
            const firstDigit = cleanedRgstNo.charAt(0);
            return !(firstDigit === '3' || firstDigit === '4');
        });

        currentPatents = filteredPatents;
        window.currentPatents = currentPatents;
        currentPage = 1;
        window.currentPage = currentPage;

        // 현재 날짜 표시
        const currentDate = new Date().toLocaleDateString('ko-KR', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
        });
        document.getElementById('resultCurrentDate').textContent = currentDate;

        // 권리자명 표시
        const searchType = document.querySelector('input[name="searchType"]:checked').value;
        const rightHolderToDisplay = data.rightHolderName || data.applicantName || '정보 없음';
        let displayText = rightHolderToDisplay;

        if (searchType === '1') {
            if (data.patents && data.patents.length > 0 && data.patents[0].applicantCd) {
                displayText = `${rightHolderToDisplay} (고객번호: ${data.patents[0].applicantCd})`;
            }
        } else {
            if (data.patents && data.patents.length > 0 && data.patents[0].businessNo) {
                displayText = `${rightHolderToDisplay} (사업자번호: ${data.patents[0].businessNo})`;
            }
        }

        document.getElementById('resultRightHolderName').textContent = displayText;
        document.getElementById('resultTotalCount').textContent = filteredPatents.length;

        const resultsSection = document.getElementById('resultsSection');

        if (currentPatents.length === 0) {
            document.getElementById('emptyState').style.display = 'block';
            document.querySelector('.table-container').style.display = 'none';
        } else {
            document.getElementById('emptyState').style.display = 'none';
            document.querySelector('.table-container').style.display = 'block';
            displayTable();
        }

        resultsSection.style.display = 'block';
    }

    // 테이블 표시 함수
    function displayTable() {
        const tableBody = document.getElementById('patentTableBody');
        tableBody.innerHTML = '';

        const startIndex = (currentPage - 1) * itemsPerPage;
        const endIndex = Math.min(startIndex + itemsPerPage, currentPatents.length);
        const paginatedPatents = currentPatents.slice(startIndex, endIndex);

        paginatedPatents.forEach(patent => {
            const row = document.createElement('tr');
            const safeValue = (value) => value && value !== '-' ? value : '-';

            // 출원번호 형식 변환
            const formatApplicationNumber = (appNumber) => {
                if (!appNumber || appNumber === '-' || appNumber.length !== 13) {
                    return appNumber;
                }
                return appNumber.substring(0, 2) + '-' + appNumber.substring(2, 6) + '-' + appNumber.substring(6);
            };

            // 날짜 형식 변환
            const formatDate = (dateStr) => {
                if (!dateStr || dateStr === '-') return '-';
                if (dateStr.length === 8 && /^\d{8}$/.test(dateStr)) {
                    return dateStr.substring(0, 4) + '-' + dateStr.substring(4, 6) + '-' + dateStr.substring(6, 8);
                }
                return dateStr;
            };

            row.innerHTML = `
                <td class="patent-number">${formatApplicationNumber(safeValue(patent.applicationNumber))}</td>
                <td class="patent-number">${safeValue(patent.registrationNumber)}</td>
                <td class="applicant-name">${safeValue(patent.applicantName)}</td>
                <td>${formatDate(patent.applicationDate)}</td>
                <td>${formatDate(patent.registrationDate)}</td>
                <td>${formatDate(patent.expirationDate)}</td>
                <td class="invention-title">${safeValue(patent.inventionTitle)}</td>
                <td>${safeValue(patent.claimCount)}</td>
                <td>${safeValue(patent.registrationStatus)}</td>
                <td>-</td>
                <td>-</td>
                <td>-</td>
                <td>-</td>
                <td>-</td>
                <td>-</td>
                <td>-</td>
            `;
            tableBody.appendChild(row);
        });
    }

    // 결과 숨기기
    function hideResults() {
        document.getElementById('resultsSection').style.display = 'none';
    }

    // 버튼 이벤트 리스너 설정
    document.addEventListener('DOMContentLoaded', function() {
        // 연차료 계산 버튼
        const calculateBtn = document.getElementById('calculateAnnuityBtn');
        if (calculateBtn) {
            calculateBtn.addEventListener('click', function() {
                console.log('🧮 연차료 계산 버튼 클릭');
                if (typeof calculateAnnuityFees === 'function') {
                    calculateAnnuityFees();
                } else {
                    alert('연차료 계산 기능을 준비 중입니다.');
                }
            });
        }

        // 납부의뢰 버튼
        const renewalBtn = document.getElementById('renewalRequestBtn');
        if (renewalBtn) {
            renewalBtn.addEventListener('click', function() {
                console.log('💰 납부의뢰 버튼 클릭');
                if (currentPatents.length === 0) {
                    alert('납부의뢰할 특허가 없습니다.');
                    return;
                }

                // 고객번호는 검색 입력값에서, 출원인 이름은 권리자명에서 가져오기
                const searchType = document.querySelector('input[name="searchType"]:checked').value;
                let customerNumber = '';

                if (searchType === '2') {
                    // 고객번호로 검색한 경우
                    customerNumber = document.getElementById('searchInput').value.trim();
                } else {
                    // 사업자번호로 검색한 경우, 첫 번째 특허의 고객번호 사용
                    if (currentPatents.length > 0 && currentPatents[0].applicantCd) {
                        customerNumber = currentPatents[0].applicantCd;
                    }
                }

                const rightHolderName = document.getElementById('resultRightHolderName').textContent;
                // 괄호 안의 정보 제거하여 순수한 이름만 추출
                const applicantName = rightHolderName.replace(/\\s*\\([^)]*\\)\\s*/g, '').trim();

                showRenewalRequestModal(customerNumber, applicantName);
            });
        }

        // 다운로드 버튼
        const exportBtn = document.getElementById('exportBtn');
        if (exportBtn) {
            exportBtn.addEventListener('click', function() {
                console.log('📊 다운로드 버튼 클릭');
                if (currentPatents.length === 0) {
                    alert('다운로드할 데이터가 없습니다.');
                    return;
                }

                // 검색에 사용된 번호 가져오기
                const searchValue = document.getElementById('searchInput').value.trim();

                if (typeof downloadExcel === 'function') {
                    downloadExcel(currentPatents, 'registered', searchValue);
                } else {
                    alert('다운로드 기능을 준비 중입니다.');
                }
            });
        }
    });

    // 납부의뢰 모달 표시 함수 (백업용)
    function showRenewalRequestModal(customerNumber, applicantName) {
        const modalHTML = `
            <div id="renewalModal" class="modal-overlay" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;">
                <div class="modal-content" style="background: white; border-radius: 8px; padding: 2rem; width: 90%; max-width: 600px; max-height: 90vh; overflow-y: auto; box-shadow: 0 10px 25px rgba(0,0,0,0.15);">
                    <div class="modal-header" style="border-bottom: 2px solid #54B435; padding-bottom: 1rem; margin-bottom: 1.5rem;">
                        <h2 style="color: #0F172A; font-size: 1.5rem; font-weight: 700; margin: 0; text-align: center;">연차료 납부의뢰</h2>
                    </div>
                    <div class="guidance-text" style="background: #f0fdf4; padding: 1.5rem; border-radius: 6px; margin-bottom: 1.5rem; border-left: 4px solid #54B435;">
                        <div style="color: #047857; line-height: 1.6;">
                            <p style="margin: 0 0 0.5rem 0;">1. 연차료 납부를 대행해 드립니다</p>
                            <p style="margin: 0 0 1rem 0;">2. 대리인 수수료는 건당 20,000원입니다 (부가세 별도)</p>
                            <p style="margin: 0 0 0.3rem 0; font-size: 0.9rem; color: #059669;">- 개인, 중소기업 70% 감면 금액 확인하여 연차료 비용 청구서 발송</p>
                            <p style="margin: 0 0 0.5rem 0; font-size: 0.9rem; color: #059669;">- 세금 계산서와 영수증 송부</p>
                            <p style="margin: 0; font-size: 0.9rem; color: #059669;">3. 특허청 특허로에 접속하시거나 특허청으로부터 받으신 지로용지로 직접 납부하실 수 있습니다</p>
                        </div>
                    </div>
                    <form action="https://api.web3forms.com/submit" method="POST" id="renewalRequestForm">
                        <input type="hidden" name="access_key" value="dd3c9ad5-1802-4bd1-b7e6-397002308afa">
                        <input type="hidden" name="redirect" value="${window.location.origin}/r_thanks">
                        <input type="hidden" name="subject" value="연차료 납부의뢰">

                        <div style="margin-bottom: 1rem;">
                            <label style="display: block; color: #374151; font-weight: 500; margin-bottom: 0.5rem;">고객번호</label>
                            <input type="text" name="customer_number" value="${customerNumber}" readonly style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 4px; background: #f9fafb; color: #6b7280;">
                        </div>

                        <div style="margin-bottom: 1rem;">
                            <label style="display: block; color: #374151; font-weight: 500; margin-bottom: 0.5rem;">이름</label>
                            <input type="text" name="name" value="${applicantName}" readonly style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 4px; background: #f9fafb; color: #6b7280;">
                        </div>

                        <div style="margin-bottom: 1rem;">
                            <label style="display: block; color: #374151; font-weight: 500; margin-bottom: 0.5rem;">이메일 <span style="color: #ef4444;">*</span></label>
                            <input type="email" name="email" required style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 4px;" placeholder="example@email.com">
                        </div>

                        <div style="margin-bottom: 1.5rem;">
                            <label style="display: block; color: #374151; font-weight: 500; margin-bottom: 0.5rem;">연락처 <span style="color: #ef4444;">*</span></label>
                            <input type="tel" name="phone" required style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 4px;" placeholder="010-0000-0000">
                        </div>

                        <textarea name="message" style="display: none;">연차료 납부의뢰 - 고객번호: ${customerNumber}, 고객명: ${applicantName}</textarea>

                        <div style="margin-bottom: 1.5rem; border: 1px solid #d1d5db; border-radius: 4px; background: #f9fafb; padding: 1rem; font-size: 0.9rem; color: #6b7280; line-height: 1.5;">
                            <p style="margin: 0 0 0.5rem 0;"><strong>개인정보 수집 및 이용 동의</strong></p>
                            <p style="margin: 0 0 0.5rem 0;">수집·이용 목적: 연차료 납부 대행 처리</p>
                            <p style="margin: 0 0 0.5rem 0;">수집 항목: 특허 고객번호, 이름, 연락처, 이메일</p>
                            <p style="margin: 0 0 0.75rem 0;">보유 및 이용 기간: 납부료 대행처리 완료 시</p>
                            <label style="display: flex; align-items: center; color: #374151; font-size: 0.9rem;">
                                <input type="checkbox" name="privacy_consent" required style="margin-right: 0.5rem; width: 16px; height: 16px;">
                                개인정보 수집 및 이용에 동의합니다.
                            </label>
                        </div>

                        <div style="display: flex; gap: 1rem; justify-content: flex-end;">
                            <button type="button" onclick="document.getElementById('renewalModal').remove()" style="padding: 0.75rem 1.5rem; border: 1px solid #d1d5db; background: white; color: #374151; border-radius: 4px; cursor: pointer; font-weight: 500;">취소</button>
                            <button type="submit" style="padding: 0.75rem 1.5rem; background: #54B435; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">납부의뢰</button>
                        </div>
                    </form>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML('beforeend', modalHTML);
    }
}
</script>

<script>
// 기존 연차료 계산 관련 상수들과 함수들은 외부 파일로 이동
// 이 섹션은 추가 기능을 위한 공간으로 사용

// 연차료 계산 정책 (annuity.txt에서 가져온 정책)
const ANNUITY_POLICY = {
    "name": "KIPO-default",
    "currency": "KRW",
    "grace_months": 6,
    "recovery_months": 3,
    "late_fee_table": {
        "1": 0.03,
        "2": 0.06,
        "3": 0.09,
        "4": 0.12,
        "5": 0.15,
        "6": 0.18
    },
    "recovery_policy": { "type": "multiplier", "value": 2.0 },
    "rounding": "nearest_10",
    "reminder_rules": [
        { "months_before_due": 6, "label": "사전예고-6개월" },
        { "months_before_due": 3, "label": "사전예고-3개월" },
        { "months_before_due": 1, "label": "사전예고-1개월" }
    ]
};

// 새로운 연차료 기본료 테이블 (최신 기준)
const NEW_BASE_FEES = {
    1: 13000,   2: 13000,   3: 13000,        // 1~3년차: 13,000원
    4: 36000,   5: 36000,   6: 36000,        // 4~6년차: 36,000원
    7: 90000,   8: 90000,   9: 90000,        // 7~9년차: 90,000원
    10: 216000, 11: 216000, 12: 216000,      // 10~12년차: 216,000원
    13: 324000, 14: 324000, 15: 324000,      // 13~25년차: 324,000원
    16: 324000, 17: 324000, 18: 324000,
    19: 324000, 20: 324000, 21: 324000, 22: 324000, 23: 324000, 24: 324000, 25: 324000
};

// 새로운 청구항 가산료 테이블 (청구범위 1항마다)
const NEW_CLAIM_FEES = {
    1: 12000,   2: 12000,   3: 12000,        // 1~3년차: 12,000원
    4: 20000,   5: 20000,   6: 20000,        // 4~6년차: 20,000원
    7: 34000,   8: 34000,   9: 34000,        // 7~9년차: 34,000원
    10: 49000,  11: 49000,  12: 49000,       // 10~12년차: 49,000원
    13: 49000,  14: 49000,  15: 49000,       // 13~25년차: 49,000원
    16: 49000,  17: 49000,  18: 49000,
    19: 49000,  20: 49000,  21: 49000, 22: 49000, 23: 49000, 24: 49000, 25: 49000
};

// 연차료 계산 헬퍼 함수들 (간소화)

// 유틸리티 함수들 (main.js의 함수들을 로컬에서 사용)
function showError(message) {
    alert(message); // 간단한 alert로 대체
}

function hideError() {
    // 로컬 구현 - 필요시 확장
}

function formatDate(dateStr) {
    if (!dateStr || dateStr === '-') return '-';
    return dateStr;
}

// 새로운 연차료 계산에 따른 감면 유형 정의
const NEW_DISCOUNT_TYPES = {
    'type1': { 
        name: '개인/중소기업/공공연구기관/전담조직/지방자치단체', 
        rate: 0.5,  // 50% 감면 (4년차부터 존속기간까지)
        description: '개인, 중소기업, 공공연구기관, 전담조직, 지방자치단체 등이 해당됩니다.',
        applicableFromYear: 4
    },
    'type1_1': { 
        name: '중소기업 + 직무발명보상우수기업/지식재산경영인증기업', 
        rate: 0.7,  // 4~9년차 70% 감면, 10년차부터 50% 감면
        rate10Plus: 0.5,  // 10년차부터는 50% 감면
        description: '중소기업이면서 직무발명보상우수기업 또는 지식재산경영인증기업입니다.',
        applicableFromYear: 4
    },
    'type2': { 
        name: '중견기업', 
        rate: 0.3,  // 30% 감면 (4~9년차)
        description: '중견기업입니다.',
        applicableFromYear: 4,
        applicableToYear: 9
    },
    'type2_1': { 
        name: '중견기업 + 직무발명보상우수기업/지식재산경영인증기업', 
        rate: 0.5,  // 50% 감면 (4~9년차)
        description: '중견기업이면서 직무발명보상우수기업 또는 지식재산경영인증기업입니다.',
        applicableFromYear: 4,
        applicableToYear: 9
    },
    'none': {
        name: '해당사항 없음',
        rate: 0,
        description: '감면 대상이 아닙니다.',
        applicableFromYear: 1
    }
};

// 감면 선택 모달 표시 함수
function showDiscountSelectionModal() {
    // 기존 모달이 있으면 제거
    const existingModal = document.getElementById('discountModal');
    if (existingModal) {
        existingModal.remove();
    }

    const modalHTML = `
        <div id="discountModal" class="modal-overlay" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;">
            <div class="modal-content" style="background: white; border-radius: 12px; padding: 2rem; width: 90%; max-width: 700px; max-height: 90vh; overflow-y: auto; box-shadow: 0 20px 25px rgba(0,0,0,0.15);">
                <div class="modal-header" style="border-bottom: 2px solid #54B435; padding-bottom: 1rem; margin-bottom: 1.5rem;">
                    <h2 style="color: #0F172A; font-size: 1.5rem; font-weight: 700; margin: 0; text-align: center;">🧮 연차료 계산</h2>
                    <p style="color: #64748B; font-size: 0.95rem; margin: 0.5rem 0 0 0; text-align: center;">감면유형을 선택해주세요</p>
                </div>
                
                <div class="discount-selection" style="margin-bottom: 2rem;">
                    <h3 style="color: #374151; font-size: 1.1rem; font-weight: 600; margin: 0 0 1rem 0;">아래 해당할 경우 체크표시하세요</h3>
                    
                    <div class="discount-options" style="space-y: 0.75rem;">
                        <label class="discount-option" style="display: flex; align-items: flex-start; padding: 1rem; border: 2px solid #E5E7EB; border-radius: 8px; cursor: pointer; transition: all 0.2s;">
                            <input type="radio" name="discountType" value="type1" style="margin: 0.25rem 1rem 0 0; width: 18px; height: 18px;">
                            <div style="flex: 1;">
                                <div style="font-weight: 600; color: #374151; margin-bottom: 0.25rem;">개인/중소기업/공공연구기관/전담조직/지방자치단체</div>
                                <div style="font-size: 0.9rem; color: #6B7280;">4년차부터 존속기간까지 50% 감면</div>
                            </div>
                        </label>
                        
                        <label class="discount-option" style="display: flex; align-items: flex-start; padding: 1rem; border: 2px solid #E5E7EB; border-radius: 8px; cursor: pointer; transition: all 0.2s;">
                            <input type="radio" name="discountType" value="type1_1" style="margin: 0.25rem 1rem 0 0; width: 18px; height: 18px;">
                            <div style="flex: 1;">
                                <div style="font-weight: 600; color: #374151; margin-bottom: 0.25rem;">중소기업 + 직무발명보상우수기업/지식재산경영인증기업</div>
                                <div style="font-size: 0.9rem; color: #6B7280;">4~9년차 70% 감면, 10년차부터 존속기간까지 50% 감면</div>
                            </div>
                        </label>
                        
                        <label class="discount-option" style="display: flex; align-items: flex-start; padding: 1rem; border: 2px solid #E5E7EB; border-radius: 8px; cursor: pointer; transition: all 0.2s;">
                            <input type="radio" name="discountType" value="type2" style="margin: 0.25rem 1rem 0 0; width: 18px; height: 18px;">
                            <div style="flex: 1;">
                                <div style="font-weight: 600; color: #374151; margin-bottom: 0.25rem;">중견기업</div>
                                <div style="font-size: 0.9rem; color: #6B7280;">4~9년차 30% 감면</div>
                            </div>
                        </label>
                        
                        <label class="discount-option" style="display: flex; align-items: flex-start; padding: 1rem; border: 2px solid #E5E7EB; border-radius: 8px; cursor: pointer; transition: all 0.2s;">
                            <input type="radio" name="discountType" value="type2_1" style="margin: 0.25rem 1rem 0 0; width: 18px; height: 18px;">
                            <div style="flex: 1;">
                                <div style="font-weight: 600; color: #374151; margin-bottom: 0.25rem;">중견기업 + 직무발명보상우수기업/지식재산경영인증기업</div>
                                <div style="font-size: 0.9rem; color: #6B7280;">4~9년차 50% 감면</div>
                            </div>
                        </label>
                        
                        <label class="discount-option" style="display: flex; align-items: flex-start; padding: 1rem; border: 2px solid #E5E7EB; border-radius: 8px; cursor: pointer; transition: all 0.2s;">
                            <input type="radio" name="discountType" value="none" style="margin: 0.25rem 1rem 0 0; width: 18px; height: 18px;">
                            <div style="flex: 1;">
                                <div style="font-weight: 600; color: #374151; margin-bottom: 0.25rem;">해당사항 없음</div>
                                <div style="font-size: 0.9rem; color: #6B7280;">감면 대상이 아닙니다</div>
                            </div>
                        </label>
                    </div>
                </div>
                
                <div style="display: flex; gap: 1rem; justify-content: flex-end;">
                    <button type="button" id="discountCancelBtn" style="padding: 0.75rem 1.5rem; border: 1px solid #D1D5DB; background: white; color: #374151; border-radius: 6px; cursor: pointer; font-weight: 500;">취소</button>
                    <button type="button" id="discountCalculateBtn" style="padding: 0.75rem 1.5rem; background: #54B435; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500;">계산하기</button>
                </div>
            </div>
        </div>
    `;

    document.body.insertAdjacentHTML('beforeend', modalHTML);

    // 라디오 버튼 선택 시 스타일 변경
    const radioButtons = document.querySelectorAll('input[name="discountType"]');
    radioButtons.forEach(radio => {
        radio.addEventListener('change', function() {
            const options = document.querySelectorAll('.discount-option');
            options.forEach(option => {
                option.style.borderColor = '#E5E7EB';
                option.style.backgroundColor = 'white';
            });
            
            if (this.checked) {
                const selectedOption = this.closest('.discount-option');
                selectedOption.style.borderColor = '#54B435';
                selectedOption.style.backgroundColor = '#F0FDF4';
            }
        });
    });

    // 모달 바깥 클릭 시 닫기
    document.getElementById('discountModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeDiscountModal();
        }
    });
    
    // 버튼 이벤트 리스너 추가
    document.getElementById('discountCancelBtn').addEventListener('click', closeDiscountModal);
    document.getElementById('discountCalculateBtn').addEventListener('click', calculateWithSelectedDiscount);
}

// 감면 모달 닫기
function closeDiscountModal() {
    const modal = document.getElementById('discountModal');
    if (modal) {
        modal.remove();
    }
}

// 선택된 감면 유형으로 연차료 계산
function calculateWithSelectedDiscount() {
    console.log('🔢 calculateWithSelectedDiscount() 함수 실행');
    
    const selectedRadio = document.querySelector('input[name="discountType"]:checked');
    if (!selectedRadio) {
        alert('감면 유형을 선택해주세요.');
        return;
    }

    const discountType = selectedRadio.value;
    console.log('📝 선택된 감면 유형:', discountType);
    
    closeDiscountModal();
    
    // 새로운 계산 방식으로 연차료 계산 실행
    console.log('⚡ performNewAnnuityCalculation() 호출');
    performNewAnnuityCalculation(discountType);
}

// 연차료 계산 메인 함수 (감면 선택 모달 표시)
function calculateAnnuityFees() {
    // 외부 스크립트의 currentPatents 변수 사용
    if (!window.currentPatents || window.currentPatents.length === 0) {
        showError('계산할 특허가 없습니다.');
        return;
    }
    
    // 감면 유형 선택 모달 표시
    showDiscountSelectionModal();
}

// 새로운 연차료 계산 로직
function performNewAnnuityCalculation(discountType) {
    console.log('🧮 performNewAnnuityCalculation() 시작, discountType:', discountType);
    console.log('📊 window.currentPatents:', window.currentPatents);

    if (!window.currentPatents || window.currentPatents.length === 0) {
        console.error('❌ 특허 데이터가 없습니다');
        showError('계산할 특허가 없습니다.');
        return;
    }

    console.log('✅ 특허 데이터 확인됨, 계산 시작');

    const today = new Date();

    // 모든 특허 데이터 처리 (페이지네이션과 관계없이)
    for (let actualIndex = 0; actualIndex < window.currentPatents.length; actualIndex++) {
        const patent = window.currentPatents[actualIndex];

        // 현재 페이지에서 해당 특허의 행을 찾기
        const currentPageStartIndex = ((window.currentPage || 1) - 1) * (window.itemsPerPage || 10);
        const currentPageEndIndex = currentPageStartIndex + (window.itemsPerPage || 10);
        const isInCurrentPage = actualIndex >= currentPageStartIndex && actualIndex < currentPageEndIndex;

        let cells = null;
        if (isInCurrentPage) {
            const tableBody = document.getElementById('patentTableBody');
            const rows = tableBody.getElementsByTagName('tr');
            const rowIndex = actualIndex - currentPageStartIndex;
            if (rowIndex < rows.length) {
                cells = rows[rowIndex].getElementsByTagName('td');
            }
        }

        // 등록상태가 '등록유지'인 경우에만 연차료 계산
        if (patent.registrationStatus !== '등록유지') {
            console.log('⚠️ 특허 ' + actualIndex + ' 등록상태가 등록유지가 아님:', patent.registrationStatus);

            // 등록유지가 아닌 경우 '해당없음' 표시
            patent.calculatedData = {
                previousPaymentMonth: patent.paymentHistory ?
                    (patent.paymentHistory.payDate && patent.paymentHistory.payDate !== '-' ?
                        window.formatPaymentDate(patent.paymentHistory.payDate) +
                        ' (' + patent.paymentHistory.lastAnnl + '년차 / ' +
                        window.formatPaymentAmount(patent.paymentHistory.payAmount) + ')' :
                        '-') : '-',
                dueDate: '해당없음',
                annualYear: '해당없음',
                annualFee: '해당없음',
                validityStatus: '해당없음',
                latePaymentPeriod: '해당없음',
                recoveryPeriod: '해당없음'
            };

            // 현재 페이지에 표시되는 경우만 UI 업데이트
            if (cells) {
                // 직전년도 납부정보는 건드리지 않음 (cells[9]를 유지)
                // cells[9].textContent는 이미 fetchPaymentHistory에서 설정되었으므로 수정하지 않음
                cells[10].textContent = '해당없음'; // 해당 연차료 납부마감일
                cells[11].textContent = '해당없음'; // 해당연차수
                cells[12].textContent = '해당없음'; // 해당연차료
                cells[13].textContent = '해당없음'; // 유효/불납
                cells[14].textContent = '해당없음'; // 추납기간
                cells[15].textContent = '해당없음'; // 회복기간
            }
            continue;
        }

        // 등록일이 있는 경우에만 계산
        if (patent.registrationDate && patent.registrationDate !== '-') {
            const registrationDate = new Date(patent.registrationDate);
            
            // 3년 업프론트 납부 규칙 적용: 등록일 기준 3년 후부터 연차료 납부 시작
            const threeYearsAfterRegistration = new Date(registrationDate);
            threeYearsAfterRegistration.setFullYear(threeYearsAfterRegistration.getFullYear() + 3);
            
            // 현재 날짜가 등록일 + 3년이 아직 안 된 경우 처리
            let isBeforeFirstPaymentDue = today < threeYearsAfterRegistration;
            
            if (isBeforeFirstPaymentDue) {
                // 현재 날짜 < 등록일 + 3년인 경우:
                // - 해당 연차료 납부마감일: 등록일 + 3년
                // - 해당연차수: 4년차
                // - 직전년도 납부연월: 빈칸
                // - 추납기간, 회복기간: 해당 연차료 납부마감일 기준 계산
                
                // 4년차 연차료 계산
                const fourthYearCalculation = calculateNewAnnuityFee(4, patent.claimCount || 1, discountType, "정상납부", null, null);

                // 납부 마감일 계산
                const dueDateStr = (parseInt(patent.registrationDate.substring(0, 4)) + 3) + patent.registrationDate.substring(4);
                const dueDate = new Date(dueDateStr.substring(0, 4) + '-' + dueDateStr.substring(5, 7) + '-' + dueDateStr.substring(8, 10));

                // 추납기간과 회복기간 계산
                let latePaymentPeriod = '-';
                let recoveryPeriod = '-';

                // 현재 날짜가 납부 마감일을 지난 경우에만 계산
                if (today > dueDate) {
                    // 추납기간: 납부 마감일 + 6개월
                    const latePaymentEnd = new Date(dueDate);
                    latePaymentEnd.setMonth(latePaymentEnd.getMonth() + 6);

                    // 회복기간: 납부 마감일 + 9개월 (추납기간 + 3개월)
                    const recoveryEnd = new Date(dueDate);
                    recoveryEnd.setMonth(recoveryEnd.getMonth() + 9);

                    // 추납기간과 회복기간 마감일 모두 표시
                    latePaymentPeriod = latePaymentEnd.getFullYear() + '.' +
                                       String(latePaymentEnd.getMonth() + 1).padStart(2, '0') + '.' +
                                       String(latePaymentEnd.getDate()).padStart(2, '0');

                    recoveryPeriod = recoveryEnd.getFullYear() + '.' +
                                   String(recoveryEnd.getMonth() + 1).padStart(2, '0') + '.' +
                                   String(recoveryEnd.getDate()).padStart(2, '0');
                }

                // 계산된 데이터를 특허 객체에 저장
                patent.calculatedData = {
                    previousPaymentMonth: patent.paymentHistory ?
                        (patent.paymentHistory.payDate && patent.paymentHistory.payDate !== '-' ?
                            window.formatPaymentDate(patent.paymentHistory.payDate) +
                            ' (' + patent.paymentHistory.lastAnnl + '년차 / ' +
                            window.formatPaymentAmount(patent.paymentHistory.payAmount) + ')' :
                            '-') : '-',
                    dueDate: dueDateStr, // 해당 연차료 납부마감일
                    annualYear: '4년차',
                    annualFee: fourthYearCalculation.totalFee.toLocaleString() + '원',
                    validityStatus: '정상납부',
                    latePaymentPeriod: latePaymentPeriod,
                    recoveryPeriod: recoveryPeriod
                };

                console.log('💾 특허 ' + actualIndex + ' 계산 데이터 저장 완료 (등록일+3년 이전):', {
                    applicationNumber: patent.applicationNumber,
                    registrationDate: patent.registrationDate,
                    fourthYearDueDate: '9999.99.99',
                    annualYear: '4년차',
                    annualFee: fourthYearCalculation.totalFee.toLocaleString() + '원',
                    isInCurrentPage: isInCurrentPage
                });

                // 현재 페이지에 표시되는 경우 UI 업데이트
                if (cells) {
                    // 직전년도 납부정보는 건드리지 않음 (cells[9]를 유지)
                    // cells[9].textContent는 이미 fetchPaymentHistory에서 설정되었으므로 수정하지 않음
                    cells[10].textContent = patent.calculatedData.dueDate; // 해당 연차료 납부마감일
                    cells[11].textContent = patent.calculatedData.annualYear; // 해당연차수
                    cells[12].textContent = patent.calculatedData.annualFee; // 해당연차료

                    // 미납여부 상태 표시
                    if (patent.calculatedData.validityStatus === '정상납부') {
                        cells[13].textContent = '-';
                        cells[13].className = '';
                    } else {
                        cells[13].textContent = patent.calculatedData.validityStatus;
                        cells[13].className = '';
                    }

                    // 추납기간 마감일 (빨간색 표시)
                    cells[14].textContent = patent.calculatedData.latePaymentPeriod;
                    if (patent.calculatedData.latePaymentPeriod !== '-') {
                        cells[14].className = 'deadline-danger';
                    } else {
                        cells[14].className = '';
                    }

                    // 회복기간 마감일 (빨간색 표시)
                    cells[15].textContent = patent.calculatedData.recoveryPeriod;
                    if (patent.calculatedData.recoveryPeriod !== '-') {
                        cells[15].className = 'deadline-danger';
                    } else {
                        cells[15].className = '';
                    }
                }
                continue;
            }
            
            // 현재 연차수 계산 (4년차부터 시작)
            const annualYear = Math.floor((today.getTime() - threeYearsAfterRegistration.getTime()) / (365.25 * 24 * 60 * 60 * 1000)) + 4;
            
            // 다음 연차수 계산 (1년 앞서서 납부하는 개념)
            let nextYear = annualYear + 1;

            // 미납 상태 확인 로직 추가
            let isUnpaid = false;
            let adjustedNextYear = nextYear;

            // 납부 이력이 있는 경우 미납 여부 확인
            if (patent.paymentHistory && patent.paymentHistory.lastAnnl && patent.paymentHistory.lastAnnl !== '-') {
                const lastPaidYear = parseInt(patent.paymentHistory.lastAnnl);

                // 해당연차수 - 직전년도 연차수 = 2 이면 미납 상태
                if (nextYear - lastPaidYear === 2) {
                    isUnpaid = true;
                    adjustedNextYear = nextYear - 1; // 해당연차수 조정
                    console.log('⚠️ 미납 감지:', {
                        applicationNumber: patent.applicationNumber,
                        원래해당연차수: nextYear,
                        직전년도연차수: lastPaidYear,
                        조정된해당연차수: adjustedNextYear
                    });
                }
            }

            // 조정된 연차수로 업데이트
            nextYear = adjustedNextYear;

            // 연차수가 25년을 초과하면 특허 만료
            if (nextYear > 25) {
                patent.calculatedData = {
                    previousPaymentMonth: patent.paymentHistory ?
                        (patent.paymentHistory.payDate && patent.paymentHistory.payDate !== '-' ?
                            window.formatPaymentDate(patent.paymentHistory.payDate) +
                            ' (' + patent.paymentHistory.lastAnnl + '년차 / ' +
                            window.formatPaymentAmount(patent.paymentHistory.payAmount) + ')' :
                            '-') : '-',
                    dueDate: '-',
                    annualYear: '만료',
                    annualFee: '-',
                    validityStatus: '만료',
                    latePaymentPeriod: '-',
                    recoveryPeriod: '-'
                };

                if (cells) {
                    // 직전년도 납부정보는 건드리지 않음 (cells[9]를 유지)
                    cells[10].textContent = '-'; // 해당 연차료 납부마감일
                    cells[11].textContent = '만료'; // 해당연차수
                    cells[12].textContent = '-'; // 해당연차료
                    cells[13].textContent = '만료'; // 유효/불납
                    cells[14].textContent = '-'; // 추납기간
                    cells[15].textContent = '-'; // 회복기간
                }
                continue;
            }
            
            // 다음 연차 정보 계산 (해당연차수/해당연차료에 표시할 정보)
            const nextCalculation = calculateNewAnnuityFee(nextYear, patent.claimCount || 1, discountType, "정상납부", null, null);

            // 임시값 설정
            const nextStatus = "정상납부";

            // 납부 마감일 계산
            const dueDateStr = (parseInt(patent.registrationDate.substring(0, 4)) + nextYear - 1) + patent.registrationDate.substring(4);
            const dueDate = new Date(dueDateStr.substring(0, 4) + '-' + dueDateStr.substring(5, 7) + '-' + dueDateStr.substring(8, 10));

            // 추납기간과 회복기간 계산 - 항상 마감일 표시
            let latePaymentPeriod = '-';
            let recoveryPeriod = '-';

            // 추납기간: 납부 마감일 + 6개월
            const latePaymentEnd = new Date(dueDate);
            latePaymentEnd.setMonth(latePaymentEnd.getMonth() + 6);

            // 회복기간: 납부 마감일 + 9개월 (추납기간 + 3개월)
            const recoveryEnd = new Date(dueDate);
            recoveryEnd.setMonth(recoveryEnd.getMonth() + 9);

            // 추납기간 마감일 표시 (납부 마감일이 지난 경우 항상 표시)
            if (today > dueDate) {
                latePaymentPeriod = latePaymentEnd.getFullYear() + '.' +
                                   String(latePaymentEnd.getMonth() + 1).padStart(2, '0') + '.' +
                                   String(latePaymentEnd.getDate()).padStart(2, '0');

                recoveryPeriod = recoveryEnd.getFullYear() + '.' +
                               String(recoveryEnd.getMonth() + 1).padStart(2, '0') + '.' +
                               String(recoveryEnd.getDate()).padStart(2, '0');
            }

            // 정상납부/미납 상태 결정
            let paymentStatus = isUnpaid ? "미납" : "정상납부";

            // 계산된 데이터를 특허 객체에 저장
            patent.calculatedData = {
                previousPaymentMonth: patent.paymentHistory ?
                    (patent.paymentHistory.payDate && patent.paymentHistory.payDate !== '-' ?
                        window.formatPaymentDate(patent.paymentHistory.payDate) +
                        ' (' + patent.paymentHistory.lastAnnl + '년차 / ' +
                        window.formatPaymentAmount(patent.paymentHistory.payAmount) + ')' :
                        '-') : '-',
                dueDate: dueDateStr,  // 해당 연차료 납부마감일
                annualYear: nextYear + '년차',
                annualFee: nextCalculation.totalFee.toLocaleString() + '원',
                validityStatus: paymentStatus,  // 미납 또는 유효 상태
                latePaymentPeriod: latePaymentPeriod,
                recoveryPeriod: recoveryPeriod
            };
            
            console.log('💾 특허 ' + actualIndex + ' 계산 데이터 저장 완료:', {
                applicationNumber: patent.applicationNumber,
                annualYear: patent.calculatedData.annualYear,
                annualFee: patent.calculatedData.annualFee,
                validityStatus: patent.calculatedData.validityStatus,
                isInCurrentPage: isInCurrentPage
            });
            
            // 현재 페이지에 표시되는 경우만 UI 업데이트
            if (cells) {
                // 직전년도 납부정보는 건드리지 않음 (cells[9]를 유지)
                // cells[9].textContent는 이미 fetchPaymentHistory에서 설정되었으므로 수정하지 않음
                cells[10].textContent = patent.calculatedData.dueDate; // 해당 연차료 납부마감일
                cells[11].textContent = patent.calculatedData.annualYear; // 해당연차수
                cells[12].textContent = patent.calculatedData.annualFee; // 해당연차료

                // 미납여부 상태 표시 (미납일 경우 빨간색)
                if (patent.calculatedData.validityStatus === '미납') {
                    cells[13].textContent = '미납';
                    cells[13].className = 'text-danger';
                } else if (patent.calculatedData.validityStatus === '정상납부') {
                    cells[13].textContent = '-';
                    cells[13].className = '';
                } else {
                    cells[13].textContent = patent.calculatedData.validityStatus;
                    cells[13].className = '';
                }

                // 추납기간 마감일 (빨간색 표시)
                cells[14].textContent = patent.calculatedData.latePaymentPeriod;
                if (patent.calculatedData.latePaymentPeriod !== '-') {
                    cells[14].className = 'deadline-danger';
                } else {
                    cells[14].className = '';
                }

                // 회복기간 마감일 (빨간색 표시)
                cells[15].textContent = patent.calculatedData.recoveryPeriod;
                if (patent.calculatedData.recoveryPeriod !== '-') {
                    cells[15].className = 'deadline-danger';
                } else {
                    cells[15].className = '';
                }
            }
        } else {
            // 등록일이 없는 경우
            patent.calculatedData = {
                previousPaymentMonth: patent.paymentHistory ?
                    (patent.paymentHistory.payDate && patent.paymentHistory.payDate !== '-' ?
                        window.formatPaymentDate(patent.paymentHistory.payDate) +
                        ' (' + patent.paymentHistory.lastAnnl + '년차 / ' +
                        window.formatPaymentAmount(patent.paymentHistory.payAmount) + ')' :
                        '-') : '-',
                dueDate: '-',
                annualYear: '-',
                annualFee: '-',
                validityStatus: '-',
                latePaymentPeriod: '-',
                recoveryPeriod: '-'
            };

            if (cells) {
                // 직전년도 납부정보는 건드리지 않음 (cells[9]를 유지)
                cells[10].textContent = '-'; // 해당 연차료 납부마감일
                cells[11].textContent = '-'; // 해당연차수
                cells[12].textContent = '-'; // 해당연차료
                cells[13].textContent = '-'; // 유효/불납
                cells[14].textContent = '-'; // 추납기간
                cells[15].textContent = '-'; // 회복기간
            }
        }
    }
    
    // 디버그: 계산 완료 후 전체 데이터 검증
    console.log('🔍 계산 완료 후 전체 데이터 검증:');
    console.log('   window.currentPatents.length:', window.currentPatents.length);
    if (window.currentPatents) {
        let calculatedCount = 0;
        window.currentPatents.forEach((patent, index) => {
            const hasCalculatedData = patent.calculatedData && patent.calculatedData.annualYear !== '-';
            if (hasCalculatedData) calculatedCount++;
            console.log('   특허 ' + index + ': ' + patent.applicationNumber + ' → 계산데이터: ' + (hasCalculatedData ? patent.calculatedData.annualYear : 'NO DATA'));
        });
        console.log('   ✅ 계산된 특허 수: ' + calculatedCount + '/' + window.currentPatents.length);
        
        // 현재 페이지 정보도 출력
        console.log('   현재 페이지:', window.currentPage || 1);
        console.log('   페이지당 항목 수:', window.itemsPerPage || 10);
    }
    
    // 계산 완료 메시지 (감면 유형 포함)
    const discountInfo = NEW_DISCOUNT_TYPES[discountType];
    const successDiv = document.createElement('div');
    successDiv.className = 'success-message';
    successDiv.innerHTML = `
        <div style="font-weight: 600; margin-bottom: 0.5rem;">✅ 연차료 계산이 완료되었습니다.</div>
        <div style="font-size: 0.9rem; opacity: 0.9;">적용된 감면: ${discountInfo.name}</div>
    `;
    successDiv.style.cssText = 'background: #d1fae5; color: #065f46; padding: 1rem; border-radius: 0.5rem; margin: 1rem 0; text-align: center;';
    
    const resultsSection = document.getElementById('resultsSection');
    const existingSuccess = document.querySelector('.success-message');
    if (existingSuccess) {
        existingSuccess.remove();
    }
    resultsSection.insertBefore(successDiv, resultsSection.firstChild);
    
    // 5초 후 메시지 제거
    setTimeout(() => {
        if (successDiv.parentNode) {
            successDiv.remove();
        }
    }, 5000);
}

// 새로운 연차료 계산 함수 (간소화)
function calculateNewAnnuityFee(annualYear, claimCount, discountType, status) {
    // 1. 기본료 계산
    const baseFee = NEW_BASE_FEES[annualYear] || NEW_BASE_FEES[25];
    
    // 2. 청구항 가산료 계산
    const claimFeePerItem = NEW_CLAIM_FEES[annualYear] || NEW_CLAIM_FEES[25];
    const claims = Math.max(1, parseInt(claimCount) || 1);
    const claimSurchargeFee = claimFeePerItem * claims;
    
    // 3. 정상 연차료 = 기본료 + 청구항 가산료
    const normalFee = baseFee + claimSurchargeFee;
    
    // 4. 감면율 적용
    let discountRate = 0;
    const discount = NEW_DISCOUNT_TYPES[discountType];
    
    if (discount && annualYear >= discount.applicableFromYear) {
        // 감면 적용 가능한 연차인지 확인
        const isApplicable = !discount.applicableToYear || annualYear <= discount.applicableToYear;
        
        if (isApplicable) {
            // 유형1-1의 경우 10년차 이후 감면율 변경
            if (discountType === 'type1_1' && annualYear >= 10) {
                discountRate = discount.rate10Plus;
            } else {
                discountRate = discount.rate;
            }
        }
    }
    
    // 5. 감면 연차료 계산
    const discountedFee = Math.round(normalFee * (1 - discountRate));
    
    // 6. 추가 비용은 일단 0으로 설정
    let additionalFee = 0;
    let finalFee = discountedFee;
    
    return {
        baseFee: baseFee,
        claimSurchargeFee: claimSurchargeFee,
        normalFee: normalFee,
        discountRate: discountRate,
        discountedFee: discountedFee,
        additionalFee: additionalFee,
        totalFee: finalFee,
        status: status
    };
}

// 연차료 납부의뢰 관련 함수들은 외부 스크립트 파일 (registered.js)에서 처리됩니다.

// 고객번호 찾기 버튼 기능
document.addEventListener('DOMContentLoaded', function() {
    const findCustomerBtn = document.getElementById('findCustomerBtn');

    if (findCustomerBtn) {
        findCustomerBtn.addEventListener('click', function() {
            openCustomerSearchPopup();
        });
    }

});

function openCustomerSearchPopup() {
    const url = 'https://www.patent.go.kr/smart/jsp/kiponet/mp/mpopenpatinfo/apagtinfo/ReadApAgtInfoInput.do';
    const popupOptions = 'width=1000,height=800,scrollbars=yes,resizable=yes,status=yes,menubar=no,toolbar=no,location=no';
    
    // 팝업창 열기
    const popup = window.open(url, 'customerSearch', popupOptions);
    
    // 팝업창이 블록되었는지 확인
    if (!popup || popup.closed || typeof popup.closed === 'undefined') {
        alert('팝업 창이 차단되었습니다.\n브라우저의 팝업 차단 설정을 확인해주세요.\n\n또는 다음 링크를 직접 열어주세요:\n' + url);
        return;
    }
    
    // 팝업창 중앙 정렬
    if (popup.moveTo) {
        const left = (screen.width - 1000) / 2;
        const top = (screen.height - 800) / 2;
        popup.moveTo(left, top);
    }
    
    // 팝업창 포커스
    popup.focus();
}

</script>